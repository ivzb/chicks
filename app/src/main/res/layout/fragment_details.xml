<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="viewModel"
            type="com.ivzb.chicks.ui.details.DetailsViewModel" />
    </data>

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:id="@+id/coordinator_layout_details"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        tools:ignore="MergeRootFrame">

        <!-- CollapsingToolbarLayout consumes all system window insets, so we need to put the
             RecyclerView first in order for it to inspect the insets first.
             Use layout_height="wrap_content" so that the CollapsingToolbarLayout doesn't collapse
             when there is not enough content to fill the screen.
             Use a large padding bottom so the content scrolls up above the FAB.
        -->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/details_recycler_view"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:clipToPadding="false"
            android:paddingBottom="80dp"
            android:scrollbars="vertical"
            app:layoutManager="LinearLayoutManager"
            app:layout_behavior="@string/appbar_scrolling_view_behavior" />

        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/appbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="@null"
            android:fitsSystemWindows="true"
            app:elevation="0dp">

            <com.google.android.material.appbar.CollapsingToolbarLayout
                android:id="@+id/collapsing_toolbar"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:layout_scrollFlags="scroll"
                app:statusBarScrim="?colorSurface">

                <!-- Toolbar needs to be on top for the back button to be tappable -->
                <androidx.appcompat.widget.Toolbar
                    android:id="@+id/toolbar"
                    style="@style/Widget.Chicks.AppBar"
                    android:layout_width="match_parent"
                    android:layout_height="?actionBarSize"
                    app:layout_collapseMode="pin"
                    app:navigationContentDescription="@string/navigate_up"
                    app:navigationIcon="@drawable/ic_arrow_back" />

            </com.google.android.material.appbar.CollapsingToolbarLayout>

        </com.google.android.material.appbar.AppBarLayout>

        <com.google.android.material.bottomappbar.BottomAppBar
            android:id="@+id/details_bottom_app_bar"
            android:layout_width="match_parent"
            android:layout_height="?actionBarSize"
            android:layout_gravity="bottom"
            app:contentInsetStart="@dimen/margin_normal"
            app:elevation="6dp"
            app:fabAlignmentMode="end" />

        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:id="@+id/fab_download"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/margin_normal"
            app:hoveredFocusedTranslationZ="0dp"
            app:layout_anchor="@id/details_bottom_app_bar"
            app:pressedTranslationZ="0dp"
            app:srcCompat="@drawable/ic_download" />

        <View
            android:id="@+id/nav_bar_scrim"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            android:layout_gravity="bottom"
            android:background="?attr/colorSurface"
            android:fitsSystemWindows="true"
            app:layout_behavior="com.ivzb.chicks.util.NavigationBarScrimBehavior" />

        <!-- A custom snackbar implementation for more control over positioning i.e. above the FAB,
             and to control its entry/exit animation. -->
        <com.ivzb.chicks.widget.FadingSnackbar
            android:id="@+id/snackbar"
            android:layout_width="@dimen/snackbar_width"
            android:layout_height="wrap_content"
            android:layout_gravity="bottom|start"
            android:layout_marginEnd="@dimen/snackbar_margin_end_fab"
            android:layout_marginBottom="@dimen/snackbar_margin_bottom_bab"
            android:visibility="gone" />

    </androidx.coordinatorlayout.widget.CoordinatorLayout>

</layout>
